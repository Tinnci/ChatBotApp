name: Android CI

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: '构建类型'
        required: true
        default: 'debug'
        type: choice
        options:
          - debug
          - release
      run_tests:
        description: '运行测试'
        required: true
        default: false
        type: boolean

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: gradle

    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      
    - name: Cache NDK
      uses: actions/cache@v4
      with:
        path: |
          $ANDROID_HOME/ndk
        key: ${{ runner.os }}-ndk-${{ hashFiles('**/*.pro') }}
        restore-keys: |
          ${{ runner.os }}-ndk-

    - name: Setup NDK
      uses: nttld/setup-ndk@v1
      id: setup-ndk
      with:
        ndk-version: r26d
        link-to-sdk: true
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
          ~/.android/build-cache
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
            
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Install OpenMP
      run: |
        sudo apt-get update
        sudo apt-get install -y libomp-dev

    - name: Setup Native Libraries
      run: |
        # 创建目标目录
        mkdir -p app/src/main/cpp/libs/arm64-v8a/
        
        # 复制QNN相关库
        cp app/src/main/jniLibs/arm64-v8a/libQnn*.so app/src/main/cpp/libs/arm64-v8a/
        
        # 构建MLLM
        cd ..
        git clone --recursive https://github.com/UbiquitousLearning/mllm.git
        cd mllm
        
        # 安装依赖
        sudo apt-get install -y ninja-build
        
        mkdir -p build && cd build
        cmake .. -G Ninja \
                -DCMAKE_BUILD_TYPE=Release \
                -DMLLM_BUILD_ANDROID=ON \
                -DANDROID_ABI=arm64-v8a \
                -DANDROID_PLATFORM=android-29 \
                -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_HOME/build/cmake/android.toolchain.cmake \
                -DAPK=ON \
                -DARM=ON \
                -DQUANT=OFF \
                -DTEST=OFF \
                -DMLLM_ENABLE_PYTHON=OFF
        
        cmake --build . --config Release
        cd ../..
        
        # 复制MLLM库
        mkdir -p ChatBotApp/app/src/main/cpp/libs/arm64-v8a/
        find mllm/build -name "*.a" -exec cp {} ChatBotApp/app/src/main/cpp/libs/arm64-v8a/ \;
        
    - name: Build with Gradle
      run: |
        ./gradlew assemble${{ github.event.inputs.build_type == 'release' && 'Release' || 'Debug' }}
      env:
        ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}
        
    - name: Run Tests
      if: ${{ github.event.inputs.run_tests == 'true' }}
      run: ./gradlew test
      
    - name: Upload Debug APK
      if: ${{ github.event.inputs.build_type == 'debug' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/*.apk
        
    - name: Upload Release APK
      if: ${{ github.event.inputs.build_type == 'release' }}
      uses: actions/upload-artifact@v4
      with:
        name: app-release
        path: app/build/outputs/apk/release/*.apk